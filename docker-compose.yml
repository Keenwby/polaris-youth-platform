services:
  postgres:
    image: postgres:14-alpine
    container_name: polaris_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: polaris_youth_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Use different port to avoid conflict
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - polaris_network

  strapi:
    build:
      context: ./cms
      dockerfile: Dockerfile.dev
    container_name: polaris_cms
    restart: unless-stopped
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=polaris_youth_dev
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=1337
      - APP_KEYS=key1,key2,key3,key4
      - API_TOKEN_SALT=apisalt
      - ADMIN_JWT_SECRET=adminsecret
      - TRANSFER_TOKEN_SALT=transfersalt
      - JWT_SECRET=jwtsecret
    ports:
      - "1337:1337"
    volumes:
      - ./cms:/opt/app
      - /opt/app/node_modules
    depends_on:
      - postgres
    networks:
      - polaris_network

  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile.dev
    container_name: polaris_frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_STRAPI_API_URL=http://localhost:1337/api
    ports:
      - "3001:3000"  # Use different port to avoid conflict
    volumes:
      - ./frontend:/opt/app
      - /opt/app/node_modules
      - /opt/app/.next
    depends_on:
      - strapi
    networks:
      - polaris_network

volumes:
  postgres_data:

networks:
  polaris_network:
    driver: bridge